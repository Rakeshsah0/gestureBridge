{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\project_video_chat\\\\client\\\\src\\\\Context.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://127.0.0.1:5000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n      myVideo.current.addEventListener('play', () => {\n        setInterval(sendFrames, 1000);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('me', id => setMe(id));\n    socket.on('callUser', _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    // Clean up the socket event listeners when the component unmounts\n    return () => {\n      socket.off('me');\n      socket.off('callUser');\n    };\n  }, []);\n  useEffect(() => {\n    socket.on('predictionVideo', predictedVal => {\n      setPrediction(predictedVal);\n      console.log(prediction);\n    });\n    return () => {\n      socket.off('predictionVideo');\n    };\n  }, [prediction]);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  // console.log(myVideo);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n      prediction,\n      socket\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"73lrpULnqq2d0TkZca/XQXlnHfk=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","addEventListener","setInterval","sendFrames","on","id","_ref2","from","callerName","signal","isReceivingCall","off","predictedVal","setPrediction","console","log","prediction","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/project_video_chat/client/src/Context.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://127.0.0.1:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState();\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [me, setMe] = useState('');\r\n  \r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n\r\n        myVideo.current.srcObject = currentStream;\r\n        myVideo.current.addEventListener('play', () => {\r\n          setInterval(sendFrames, 1000);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('me', (id) => setMe(id));\r\n\r\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n    });\r\n    // Clean up the socket event listeners when the component unmounts\r\n    return () => {\r\n      socket.off('me');\r\n      socket.off('callUser');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('predictionVideo', (predictedVal) => {\r\n      setPrediction(predictedVal);\r\n      console.log(prediction);\r\n    });\r\n    return () => {\r\n      socket.off('predictionVideo');\r\n    };\r\n  }, [prediction]);\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n      socket.emit('answerCall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on('callAccepted', (signal) => {\r\n      setCallAccepted(true);\r\n\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n\r\n    connectionRef.current.destroy();\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  // console.log(myVideo);\r\n  return (\r\n    <SocketContext.Provider value={{\r\n      socket,\r\n      call,\r\n      callAccepted,\r\n      myVideo,\r\n      userVideo,\r\n      stream,\r\n      name,\r\n      setName,\r\n      callEnded,\r\n      me,\r\n      callUser,\r\n      leaveCall,\r\n      answerCall,\r\n      prediction,\r\n      socket,\r\n    }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}